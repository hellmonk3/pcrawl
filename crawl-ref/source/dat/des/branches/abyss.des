###############################################################################
# abyss.des: abyss random minivaults, exits and abyssal rune vaults.
# Exit and rune vaults are placed by tag.
#
# Abyssal vaults should usually be minivaults and floating vaults, no larger
# than 28x23. Encompass vaults will be rejected at compile time, and
# other orientations will produce weird results.

{{
 -- Since abyssal stairs don't spawn at the bottom of the Abyss,
 -- replace a vault's empty guarded floor with a floor item at the bottom.
function init_abyss_exit(e, glyph)
  if you.depth() == dgn.br_depth(you.branch()) then
    if crawl.random2(10) > 3 then
      e.kfeat(glyph .. " = exit_abyss")
    else
      e.kitem(glyph .. " = any no_pickup")
    end
  else
    e.kfeat(glyph .. " = exit_abyss w:6 / abyssal_stair w:4")
  end
end

function abyss_entry(e, glyph)
  e.tags("extra luniq_enter_abyss chance_enter_abyss")
  e.depth_chance("Depths:1-2", 3333)
  e.depth_chance("Depths:3",   10000)
  e.depth_chance("Depths:4-",  3333)
-- start TAG_MAJOR_VERSION == 34
  e.depth_chance("D:21-24", 3333)
  e.depth_chance("D:25",    10000)
  e.depth_chance("D:26-",   3333)
-- end TAG_MAJOR_VERSION
  e.kfeat(glyph .. ' = enter_abyss')
end
}}

###############################################################################
# Abyss entries.
# 1/3 chance to appear on Depths floors and guaranteed on Depths:4.
###############################################################################

default-depth: Depths, D:21-

# This one is the backup and the one used in encompass vaults.
NAME: abyss_entry
TAGS: allow_dup overwrite_floor_cell no_exits replace_portal transparent
TAGS: fallback_enter_abyss
WEIGHT: 50
: abyss_entry(_G, 'O')
MAP
O
ENDMAP

NAME:    abyss_entry_small_statue_room
TAGS:    nolayout_encompass
: abyss_entry(_G, 'O')
MAP
xxxxx
xGOGx
xx+xx
ENDMAP

NAME:    abyss_entry_crystal
TAGS:    nolayout_encompass
: abyss_entry(_G, 'O')
SHUFFLE: AB
SUBST:   A : .:50 G:50 T U V Y t
SUBST:   B : .:100 G
MAP
  xxxxx
 xxbbbxx
xxbbObbxx
xbbA.Abbx
xbB...Bbx
xb.....bx
ENDMAP

NAME:    hangedman_abyss_entry_splay
TAGS:    nolayout_encompass transparent
SHUFFLE: ABCDE
SUBST:   A : cxxx.., B : cxxx.., CDE = x, F : ccxxb
: abyss_entry(_G, 'O')
MAP
        xx..
        x.A.
        xx..
        x.C......
        xF.D.E.B.
      xxx.F.x.x.x
xxxxxxx.O.xxxxxxx
x.x.x.F.xxx
.B.E.D.Fx
......C.x
     ..xx
     .A.x
     ..xx
ENDMAP

###############################################################################
# abyss random vaults
###############################################################################

default-depth: Abyss

###############################################################################
# Dummy vaults
NAME: abyss_furniture_dummy
TAGS: dummy
CHANCE: 90% (Abyss:1)
CHANCE: 80% (Abyss:2)
CHANCE: 70% (Abyss:3)
CHANCE: 60% (Abyss:4)
CHANCE: 50% (Abyss:5)
CHANCE: 40% (Abyss:6)
CHANCE: 30% (Abyss:7)

NAME: abyss_rune_dummy
TAGS: abyss_rune unrand dummy
CHANCE: 10%

# FIXME: the tag name is inaccurate with abyssal stairs placed by these vaults.
NAME: abyss_exit_dummy
TAGS: abyss_exit unrand dummy
CHANCE: 95% (Abyss:1)
CHANCE: 90% (Abyss:2)
CHANCE: 85% (Abyss:3)
CHANCE: 80% (Abyss:4)
CHANCE: 75% (Abyss:5)
CHANCE: 70% (Abyss:6)
CHANCE: 65% (Abyss:7)

NAME:    abyss_fake_exit
TAGS:    allow_dup
WEIGHT:  1
KFEAT:   O = exit_abyss mimic w:6 / abyssal_stair mimic w:4
MAP
O
ENDMAP

###############################################################################
NAME: abyss_furniture_001
TAGS: extra allow_dup
MAP
G.G
.V.
G.G
ENDMAP

#################################################################
# Ecumenical Temple... (1KB)
# 'cuz the fun haters removed overflow temples from the Abyss...
NAME:    abyss_greek_temple
TAGS:    no_rotate
NSUBST:  . = 3:1 / 2:2 / *:.
SUBST:   ' = .
COLOUR:  " : white w:5 / none
FTILE:   "ABCDEFGHIJKLMNOPRQSTUV : floor_limestone w:5 / floor_nerves
SUBST:   " = .
MONS:    plant, bush
SHUFFLE: ABCDEFGHIJKLMNOPQRSTUV
KFEAT:   A = altar_makhleb
KFEAT:   B = altar_xom
KFEAT:   C = altar_zin
KFEAT:   D = altar_the_shining_one
KFEAT:   E = altar_kikubaaqudgha
KFEAT:   F = altar_yredelemnul
KFEAT:   G = altar_gozag
KFEAT:   H = altar_vehumet
KFEAT:   I = altar_okawaru
KFEAT:   J = altar_sif_muna
KFEAT:   K = altar_trog
KFEAT:   L = altar_nemelex_xobeh
KFEAT:   M = altar_elyvilon
KFEAT:   N = altar_fedhas
KFEAT:   O = altar_cheibriados
KFEAT:   P = altar_ashenzari
KFEAT:   Q = altar_dithmenos
KFEAT:   R = altar_ru
KFEAT:   S = altar_qazlal
KFEAT:   T = altar_uskayaw
KFEAT:   U = altar_hepliaklqana
KFEAT:   V = altar_wu_jian
MAP
''''''.................
''ccccccccccccccccccc..
''G'c"""D"""""""P"""c..
''''c"A"""I"""L"""S"c..
''G'c"""E"""V"""Q"""ct.
''''+"B"""J"""N"""T"c..
''G'c"""F"""R"""R"""c..
''''c"C"""K"""O"""U"c.t
''G'c"""H"""""""S"""c..
''ccccccccccccccccccc..
.......t........ttt....
ENDMAP

# <bh> I got the idea after I introduced a bug where the whole floor of
#        the abyss turned into altars
NAME:   bh_abyss_xom_lugonu_altar
TAGS:   extra allow_dup
COLOUR: " : magenta w:2 / white
KFEAT:   _ = altar_lugonu
KFEAT:   X = altar_xom
SUBST:   a = XXX"
SUBST:   b = X"
SUBST:   c = XX"
SUBST:   d = X""
SUBST:   e = X"""
MAP
   ebe
  dcacd
 ec"""ce
 ba"_"ab
 ec"""ce
  dcacd
   ebe
ENDMAP

NAME:   bh_silent_lugonu_exit
TAGS:   allow_dup
MONS:   silent spectre
KFEAT:   _ = altar_lugonu
MAP
...       xxx
._.       x1x
...       xx+
ENDMAP

NAME:   hangedman_abyss_or_decor_stabs
TAGS:   transparent no_pool_fixup decor
DEPTH:  D, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:  xc = xxxxcccb, ' = %0, " = wl...
: else
TAGS:   extra
SUBST:  '" = ., c : xxc
: end
MAP
...."
.cxx.
.x'..."
.x.cxx.
"..x'..."
  .x.cxx.
  "..x'..."
    .x.cxx.
    "..x'..
      .x.
      "..
ENDMAP

NAME:   hangedman_abyss_or_decor_jellyfish_corner
TAGS:   transparent decor
DEPTH:  D:4-, Depths, Abyss
WEIGHT: 5 (D), 10
: if you.in_branch("Abyss") then
SUBST:  x : XXCB, c : CB, X = xxxxcb, C = xccccb, B = xcbbbb
SUBST:  HIJ = cbw,  ' = 000., " = %%%.
: else
TAGS:   extra
SUBST:  '" = ., c : xxc, H : xc.., I : xc.., J : xc..
: end
MAP
       .c
      .xc
     .xcc
    @x..c......
   @x..'ccxx...
  .x..H"c".xxx.
 .x..H'"c'.....
.xc.'"""c.I...
ccccccccc...J.
   .c"'..x....
   .x..I..x...
   .xx.....xx.
   ..x..J..xx.
   ..x........
   ....
ENDMAP

NAME:    hangedman_abyss_or_decor_lesser_grid
TAGS:    transparent no_pool_fixup decor
DEPTH:   D, Depths, Abyss
: if you.in_branch("Abyss") then
SHUFFLE: ABCDEF, "'
SUBST:   A : cbx.., B : cbx., C : cbx.., D : cbx., E : cbx.., F : cbx.
SUBST:   " = 0., ' = %*..., X = wl.
: else
TAGS:    extra
SUBST:   '" = ., X : x.
SUBST:   A : xxc., B : xxc., C : xxc., D : xxc., E : xxc., F : xxc.
: end
MAP
.......
.AB....
.BA.X..
.'".......
.CD"EF"xx.
.DC'FE'xx.
.......'"....
   ..X.FE....
   ....EF.X..
   ....'"....
      .DC"BA.
      .CD'AB.
      .......
ENDMAP

NAME:    hangedman_abyss_or_decor_clamps
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:8-, Depths, Abyss
KFEAT:   @ = +
SHUFFLE: ABCDEFGH, '"
: if you.in_branch("Abyss") then
SUBST:   b = wlb., AB = wl., CD = xcb., EFGH = .
SUBST:   x = xxxxcccb, ' = 00., " = %%*.
: else
TAGS:    extra
SUBST:   b : bbwww., A : @, B : @xx, C : @xxxx, DEFGH = x, '" = .
: end
MAP
    xxAxx
    x...x
    B.'.C
    x...x
xxDxx...xxExx
x....b".....x
F.'.."b"..'.G
x......b....x
xxHxxx+xbx+xxxHxx
    x....b......x
    G.'.."b"..'.F
    x....."b....x
    xxExx...xxDxx
        x...x
        C.'.B
        x...x
        xxAxx
ENDMAP

NAME:    hangedman_abyss_or_decor_passed
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%*..
SUBST:   x = xxxxcb, XY = ww...
: else
TAGS:    extra
SUBST:   x : xxxc, Y = x, X : x..
NSUBST:  ; = 1:@ / *:., : = 1:@ / *:., ` = 1:@ / *:.
: end
MAP
     x
 ;;;;x::::
 ;YX.x.XY:
 ;X..x..X:
 ;.......:
xxxx.x.xxxx
 `.......'x
 `X..x.X'"x
 `YX.x.'Y"x
 ````x'""xx
     xxxxx
ENDMAP

NAME:    hangedman_abyss_or_decor_stagger
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%., X = xxcccb, x = xxxxxcccb
SUBST:   yY = ...xxxcbw, zZ = ...xxxcbl
: else
TAGS:    extra
SHUFFLE: yY, zZ
SUBST:   x : xxxxc, X : xxc, y : x.., z : x.., YZ'" = .
: end
MAP
..........
.xxxXxxx..
...'X"..z...
..."X'..Z...
.xxxXXXxxx..
..Y.."X'..z...
..y..'X"..Z...
 ..xxxXXXxxx..
 ...Y..'X"..z..
 ...y.."X'..Z..
   ..xxxXXXxxx.
   ...Y.."X'...
   ...y..'X"...
     ..xxxXxxx.
     ..........
ENDMAP

NAME:    hangedman_abyss_or_decor_slice
TAGS:    transparent no_pool_fixup decor
DEPTH:   D:4-, Depths, Abyss
WEIGHT:  5 (D), 10
: if you.in_branch("Abyss") then
SUBST:   ' = 00., " = %%., x = xxxxxcccb, cX = xxccb
: else
TAGS:    extra
SUBST:   x : xxxxc, c : xxc., X : xxc, '" = .
: end
MAP
        ..c
       ..X.
      ..c..
.......c'.
x"x'x"c.xxxx
xxxx.c"x'x"x
  .'c.......
 ..c..
 .X..
 c..
ENDMAP

###############################################################################
# Abyss rune vaults
#
# Follow the lead of the other vaults here, and recolour / retile some border
# floor to instantly distinguish the vault as containing the abyssal rune.
# Solitary stone arches are also to be used here and nowhere else in Abyss
# vaults.
###############################################################################
# Non-combined rune vaults (see the combined rune vault header).

NAME:    hangedman_abyss_rune_flesh_and_stone
TAGS:    abyss_rune unrand no_monster_gen no_item_gen no_pool_fixup
WEIGHT:  5
MONS:    catoblepas, earth elemental, basilisk, boulder beetle
MONS:    catoblepas skeleton, air elemental, death drake
ITEM:    potion of enlightenment q:1 ident:type
KMONS:   O = patrolling war gargoyle
KITEM:   O = abyssal rune of Zot
KFEAT:   A = stone_arch
KFEAT:   "@6 = runelight
SHUFFLE: 23 / 57
SUBST:   ! = 2, 0 = 222234555
KPROP:   l = no_cloud_gen
FTILE:   AO = floor_crystal_squares
COLOUR:  O = lightmagenta
MAP
    @d0A0d@
6ccccGclcGcccc6
 .cOccclccccc.
  c+c0"l"0ccc
"cc1ccclcccccc"
 .c4c0"l"0ccc.
  c5c clc ccc
"cc.c0"l"0cccc"
 .c.ccclccccc.
  c.c0"l"0ccc
"cc.ccclcccdcc"
 .c+c2c!c5c+c.
  c 3 c1c 7 c
6cc2 2+ +5 5cc6
 .ccccccccccc.
  .c c. .c c.
ENDMAP

# This vault would really appreciate "warning door" and "locked door"
# being separated from their forced union as runed doors...
NAME:   hangedman_abyss_rune_macabre_mess
TAGS:   abyss_rune unrand no_monster_gen
KMONS:  1 = glowing orange brain
KMONS:  2 = golden eye / floating eye w:2
KMONS:  3O = flying skull
KMONS:  4 = large abomination / small abomination w:6
KMONS:  5 = cacodemon
KMONS:  6 = executioner
KMONS:  7 = shining eye
KMONS:  8 = titanic slime creature
KITEM:  O = abyssal rune of Zot
KFEAT:  A = stone_arch
KFEAT:  n = iron_grate
KFEAT:  " = runelight
KFEAT:  1237 = shallow_water w:1 / . w:14
SUBST:  c = ccccvb
FTILE:  A+@W48O = floor_crystal_squares
COLOUR: 48 = lightmagenta
MAP
 "cccccc4@4cccccc"
 cc .. ccAcc .. cc
"c 44"" x5x ""44 c"
cc44nnn.c+c.nnn44cc
c 4nn7n.....n7nn4 c
c44+13n5.c.5n31+44c
c 4nn2n.....n2nn4 c
cc"4nnn.....nnn4"cc
"c ......6...... c"
 ccc "4nnnnn4" ccc
  "cc84n2O2n48cc"
   "c 4nn1nn4 c"
    cc44n+n44cc
    "c 44444 c"
     ccc 4 ccc
      "ccccc"
ENDMAP

# This theme is even more disparate than the literal vault combinations...
NAME:   grunt_abyss_rune_wretched_hive
TAGS:   abyss_rune unrand patrolling
MONS:   killer bee, meliai, spark wasp
MONS:   wretched star, green very ugly thing
KMONS:  O = queen bee
# flavor: abyss creature wandered into the hive. TODO varied corpse types?
: dgn.delayed_decay(_G, '1', 'deep elf demonologist corpse')
KITEM:  O = abyssal rune of Zot
KFEAT:  a = x
KFEAT:  A = stone_arch
KFEAT:  " = runelight
NSUBST: 1 = 3:5 / 1:15 / 3:2 / 1:1 / 10 = 11. / * = .
NSUBST: ' = 1:d / * = d:1 .:199
TILE:   a = wall_wax
FTILE:  A4O = floor_crystal_squares
COLOUR: a = yellow
COLOUR: 4O = lightmagenta
MAP
          xxxxxxx
        xxxaaaaaxxxx
      xxxxaaaOaaaaxxx
    xxxaaaad1a1daaaxxx
   xxaa1aa21'1'12aa1axxx
  xxaa'a'."a"."a".'a'aaxx
 xxaa4aaa1aaa4aaa1aaa4aaxx
xxaa..'a'."a"."a".'a'.'aaxx
xaa.'a'.'a'.'a'.'a'.'a'.aax
xaa1aaa1aaa1aaa1aaa1aaa1aax
xa..'a'.'a'.'a'.'a'.'a'..ax
aa.a'."a".'a'.'a'."a".'a.aa
..aaa1aaa1aaa1aaa1aaa1aaa..
 ..a.."a".'a'.'a'."a"..a..
   .....................
        .....A......
           ..@..
ENDMAP

NAME:    nicolae_abyss_rune_star_stuff
TAGS:    abyss_rune unrand no_monster_gen
WEIGHT:  25
KMONS:   1 = starcursed mass
KMONS:   2 = wretched star
KMONS:   3 = tentacled starspawn
KMONS:   4 = place:Abyss:$
KITEM:   O = abyssal rune of zot
KFEAT:   A = stone_arch
KFEAT:   4 = runelight
# Place an arch before the door, and place the rune on one of
# the three most distant points from the entrance.
SHUFFLE: Aa'Bb"Dd-Ee_Ff~ / Bb"Dd-Ee_Ff~Aa' / Dd-Ee_Ff~Aa'Bb" / \
         Ee_Ff~Aa'Bb"Dd- / Ff~Aa'Bb"Dd-Ee_
NSUBST:  FAB : 1:O / *:"
NSUBST:  s = 2:1 / 2:2 / 2:3
SUBST:   a = +, ' = A, DE = ., bdef = c
SUBST:   c = cccxbv
CLEAR:   "-_~
FTILE:   123O = floor_crystal_squares
COLOUR:  123O = lightmagenta
MAP
     4ccc4
    cccBccc
  _ec..s..cf~
4ccc...c...ccc4
cc....c.c....cc
cA...........Dc
c..sc.....cs..c
cc..c..s..c..cc
-d...........a'
 c...c...c...c
 cc..cc.cc..cc
 4c.s.....s.c4
  cF.......Ec
  cccccbccccc
       "
ENDMAP

NAME:    nicolae_abyss_rune_left_handed
TAGS:    abyss_rune unrand no_monster_gen
WEIGHT:  25
MONS:    ancient zyme, wretched star, starcursed mass, lurking horror
MONS:    thrashing horror, tentacled starspawn, apocalypse crab
# Worldbinders summon from other branches....
KMONS:   8 = nagaraja / ghost moth / thorn hunter / merfolk javelineer
KMONS:   9 = guardian serpent / entropy weaver / swamp dragon / satyr
KMONS:   0 = place:Abyss:$
KMONS:   O = worldbinder
KITEM:   O = abyssal rune of zot
KFEAT:   A = stone_arch
KFEAT:   " = runelight
NSUBST:  0 = 1:0 / 1:9 / * = 09
NSUBST:  X = 1:1 / 1:2 / 1:3 / * = 123"", Q = 1:6 / 1:7 / * = 67...
SHUFFLE: 12, 45
FTILE:   A123O = floor_crystal_squares
COLOUR:  123O = lightmagenta
MAP
    ...
   ..c....
  ..cc0.c.
 ..ccc"......
..cccccccccc..
..0ccc.4cc.cc..
..cc9+cc+...nc.
."c.5.cc..X..c.
.ccc+ccc.XcX.c.
.....Q.c..X8.c.
..Q.A..cn...nc.
.....Q..ccOcc..
.ccccc..8ccc".0
.ccc"ccccc"cc..
.ccc...0....cc.
............c0.
           .cc.
           ....
ENDMAP

########################################
# Combined abyssal rune vaults, because we were collecting a lot
# and standardizing difficulty was easier with consolidation.
NAME:   dshaligram_kb_abyss_rune_zappy_water_cross
TAGS:   abyss_rune unrand patrolling no_pool_fixup
MONS:   generate_awake lightning spire, raiju, smoke demon, blizzard demon
KMONS:  O = merfolk impaler
KITEM:  O = abyssal rune of Zot
KFEAT:  O = shallow_water
KFEAT:  A = stone_arch
KFEAT:  1 = runelight
FTILE:  A234OwW = floor_crystal_squares
MAP
www1w1www
www2w4www
123WOW321 A
www4w2www
www1w1www
ENDMAP

NAME:   due_evilmike_abyss_rune_seething_liches
TAGS:   abyss_rune unrand no_monster_gen
MONS:   fire bat, chaos spawn, fire dragon / ice dragon, ogre mage
KMONS:  OL = lich / ancient lich w:1 / dread lich w:1
KITEM:  O = abyssal rune of Zot
KFEAT:  A = stone_arch
KFEAT:  ' = runelight
NSUBST: L = 1:O / *:L
MARKER: ! = lua:fog_machine { cloud_type = "seething chaos", \
            pow_min = 8, pow_max = 12, delay_min = 20, delay_max = 30, \
            size = 1, walk_dist = 1, spread_rate = 16 }
SUBST:  ! = V, X = x', x = xc, C : c.
FTILE:  @A+V1234LOx = floor_crystal_squares
COLOUR: @12LO = lightmagenta
MAP
  cccccc X
 ccLccLcc
cccc+c+cccX
cLccc1.ccc X
cc+c2.1+LcX X
ccc1.2.ccc X X
cL+.1.++Cxx X X
cccc+c++.4xx X X
 cccLcC.c.3xx X X
X ccccx4.1.2xx X
  X X xx3.1.2xx X
   X X xx2.!..xxx
    X X xx2....xx
     X X xx....+'
      X X xx...+'
       X X xx++x@
        X X x''@A
ENDMAP

NAME:    evilmike_abyss_rune_elephants_shrine
TAGS:    abyss_rune unrand
KMONS:   1 = elephant
KMONS:   23 = dire elephant
KMONS:   45 = hellephant
KMONS:   67 = generate_awake spatial vortex
KMONS:   89 = draconian shifter
KMONS:   _ = patrolling spatial maelstrom
ITEM:    potion of enlightenment q:1 ident:type
KITEM:   _ = abyssal rune of Zot
KFEAT:   _ = altar_lugonu
KFEAT:   A = stone_arch
KFEAT:   " = runelight
# Two rings of opposite sides on the inside / outside of the octagon lava moat,
# with one to three (mostly two) pairs of opposite sides made floor or wall.
SHUFFLE: HIJKL, MNOPQ
SUBST:   HIMN = l, J : ll. KL = ., O : llP, PQ : xxxxb, c : ccv
NSUBST:  ' = 1:4 / 1:8 / 1 = 22248 / 10 = 2216 / *:., d = 1:dddd. / *:.
MARKER:  F = lua:fog_machine { cloud_type = "translocational energy", \
             pow_max = 2, delay_min = 10, delay_max = 20, walk_dist = 0, size = 1 }
FTILE:   AF3579_OG+ = floor_crystal_squares
COLOUR:  F3579 = lightmagenta
MAP
  l".HIIIIIIIIJ."l
 l".HllllllllllJ."l
l"dHlMNNNNNNNNOlJd"l
".HlMMllllKlllOOlJ."
.HlMMlJ''''''HlOOlJ.
HlMMlJ''''G'''HlOOlJ
KlPlJ'FccccccF'HlPlK
KlPl''ccG"79cc''lPlK
KlPII''+"5_7cc'IIPlKA
KlPl''ccG37"cc''lPlK
KlPlH'FccccccF'JlPlK
JlOOlH''''G'''JlMMlH
.JlOOlH''''''JlMMlH.
".JlOOllllKlllMMlH."
l"dJlONNNNNNNNMlHd"l
 l".JllllllllllH."l
  l".JIIIIIIIIH."l
ENDMAP

NAME:   evilmike_nicolae_abyss_rune_containment_curve
TAGS:   abyss_rune unrand patrolling no_monster_gen no_item_gen
MONS:   neqoxec w:4 / raiju / worldbinder / thrashing horror / shapeshifter
MONS:   tormentor / hellion / shadow demon / \
        bone dragon / iron dragon zombie w:4
KMONS:  3O = spatial maelstrom
KITEM:  O = abyssal rune of Zot
KFEAT:  A = stone_arch
KFEAT:  " = runelight
SUBST:  X : b", x = xv, n = nnnnnc, m = n
FTILE:  A123$Onc = floor_crystal_squares
COLOUR: 123$O = lightmagenta
MAP
""xxxxxxxxxxxxxxxx
.....1xxnnnnnnnnnxxx
........1nnnnnnnnxxxxx
....X......xxnnnnnxxxx
.........2..nnnn33xxxx
A.....X...x.2$mm3Oxxxx
.........2..nnnn33xxxx
....X......xxnnnnnxxxx
........1nnnnnnnnxxxxx
.....1xxnnnnnnnnnxxx
""xxxxxxxxxxxxxxxx
ENDMAP

NAME:    hangedman_grunt_abyss_rune_horror_hoard
TAGS:    abyss_rune unrand no_monster_gen no_item_gen patrolling transparent
WEIGHT:  5
KMONS:   1 = great orb of eyes perm_ench:shapeshifter
KMONS:   2 = guardian serpent perm_ench:shapeshifter
KMONS:   3 = crystal guardian
KMONS:   4 = unseen horror
KMONS:   5 = thrashing horror
KMONS:   6 = lurking horror
# Note: if anything in these two item sets becomes useful for more then a tiny
# fraction of characters finding the abyssal rune, remove or replace them.
KITEM:   4d = scroll of noise w:15 q:1 / \
         club w:6 / stone q:1 / dart q:1 ego:atropa / \
         mundane animal skin / mundane ring mail / gold q:1
KITEM:   5 = wand of flame / whip w:2 / hat mundane w:5
KITEM:   6e = abyssal rune of zot mimic
KITEM:   O = abyssal rune of zot
KFEAT:   A = stone_arch
KFEAT:   " = runelight
SHUFFLE: 12
SUBST:   X = xxxxc, c = cccvb
FTILE:   Ade456O = floor_crystal_squares
COLOUR:  de456O = lightmagenta
MAP
    .....  . X ".@
  ........cXXXXX. X
 ...xmxmxcx c2c.c" .
 ..mxd4dxm1......c..
..xxd5d4dxx.......X"
..md6ddd5d+3.....cX
@.x4d4O4d4+...e..1XXA
..md5ddd6d+3.....cX
..xxd4d5dxx.......X"
 ..mxd4dxm1......c..
 ...xmxmxxx c2c.c" .
  ........XXXXXX. X
    .....  . X ".@
ENDMAP

# Perhaps parts of Elf and Forest were devoured in a twisted experiment?
NAME:    grunt_abyss_rune_forest_and_sorcery
TAGS:    abyss_rune unrand patrolling no_pool_fixup no_monster_gen transparent
MONS:    worldbinder, rakshasa
KMONS:   34 = deep elf sorcerer
KMONS:   56 = deep elf blademaster
KMONS:   78 = tengu reaver
KMONS:   90 = shambling mangrove
KMONS:   AB = thorn hunter
KMONS:   CD = dire elephant
KMONS:   EF = satyr
KMONS:   G = water elemental
KMONS:   H = water nymph
KFEAT:   G = w
KFEAT:   H = W
KFEAT:   a = stone_arch
KFEAT:   ' = runelight
KITEM:   O = abyssal rune of Zot
# Exclude one of the deep elves / tengu and one of the Forest denizens.
SHUFFLE: 34 / 56 / 78, 90 / AB / CD / EF
SUBST:   T = t., X = ttWw
NSUBST:  . = 1:2 / *:., w = 2:G / *:w, W = 2:H / *:W
RTILE:   x = wall_hall
COLOUR:  x = elven_brick
FTILE:   -+U4680BDFO = floor_hall
FTILE:   .t23579ACE = floor_grass
FTILE:   a1 = floor_crystal_squares
COLOUR:  1 = lightmagenta
MAP
    ..'.'.
  ....XXX....
 ..XWwtttwWX..
 .X.Tt.w.tT1X..'..
..WT.WXAXW.xxxxxxx.
1.wt.tt'xxxxcccccx'
.Xt.Xt3'x0--c6--cx.
aXtw...'+-U-+-O4cx1
.Xt.Xt2'x6--c0--cx.
1.wt.tt'xxxxcccccx'
..WT..XCX..xxxxxxx.
 .X.Tt.w.tT1X..'..
 ..XWwtttwWX..
  ....XXX....
    ..'.'.
ENDMAP

NAME:    evilmike_nicolae_abyss_rune_betentacled_crabyss
TAGS:    abyss_rune unrand transparent no_pool_fixup patrolling
KMONS:   1P = apocalypse crab
KMONS:   2 = fire crab
KMONS:   3 = ghost crab
KMONS:   K = kraken
KMONS:   T = tentacled monstrosity
KMONS:   S = shambling mangrove
KITEM:   OP = abyssal rune of Zot
KFEAT:   TS1P = W
KFEAT:   K = w
KFEAT:   A = stone_arch
KFEAT:   " = runelight
SHUFFLE: O1 / O1 / P'
SUBST:   D : cw, ' = w
FTILE:   A23O = floor_crystal_squares
COLOUR:  23O = lightmagenta
MAP
  .............
  .cc.......cc.
....c"ccccc"c....
.cccccccOccccccc.
.."cc1WWWWW1cc"..
.cccWWDWSWDWWccc.
.."cTWWWWWWWTc"..
.ccccccWWWcccccc.
..."cc"WWW"cc"...
 ..cc""WWW""cc..
 ..c"""WWW"""c..
 ..c"""WwW"""c..
 .cccWWwwwWWccc.
 .c2WWwwKwwWW3c.
 .cccWWwwwWWccc.
 ...""""A""""...
ENDMAP

NAME:   doesnt_abyss_rune_brain_food
TAGS:   abyss_rune unrand patrolling no_pool_fixup
MONS:   neqoxec, glowing orange brain, orange crystal statue, very ugly thing
MONS:   starcursed mass
KITEM:  O = abyssal rune of Zot
KFEAT:  " = runelight
COLOUR: n = lightmagenta
NSUBST: - = 4:d / 2=d. / ., . = 3:1 / 1:2 / 1:4 / 1:5 / 2=112 / 2=45..
SUBST:  l : lw
{{
dgn.delayed_decay(_G, 'd', 'ghoul corpse / minotaur corpse / ' ..
                           'troll corpse / ogre corpse')
}}
MAP
  cccnccc
 cc-nOn-cc
 c.--n--.c
cc"-n-n-.cc
c---...---c
nll-...-lln
n3l-.."-l3n
nll-"..-lln
n---...---n
nn"......nn
 nn...."nn
  nn"."nn
ENDMAP

NAME:    gammafunk_abyss_rune_reverse_zot
TAGS:    abyss_rune unrand
MONS:    draconian, nonbase draconian
MONS:    wretched star / starcursed mass / apocalypse crab / lurking horror \
         / very ugly thing / quicksilver dragon / shadow dragon
MONS:    balrug / hellion / lorocyproca / tormentor / cacodemon / reaper \
         / blizzard demon / executioner / angel / daeva
KMONS:   R = hellephant / ancient lich / dread lich / hell sentinel / profane servitor
KITEM:   O = abyssal rune of Zot
KFEAT:   " = runelight
MARKER:  P = lua:transp_loc("reverse_zot_entry")
MARKER:  Q = lua:transp_dest_loc("reverse_zot_entry")
MARKER:  R = lua:transp_loc("reverse_zot_exit")
MARKER:  S = lua:transp_dest_loc("reverse_zot_exit")
SHUFFLE: AB, CD
# Make a classed draconian and band in each lung.
NSUBST:  A = 2 / 2=112 / 2=1' / ', C = 2 / 2=112 / 2=1" / "
NSUBST:  B = 3 / 0 / ', D = 3 / 0 / "
NSUBST:  ' = 003 / 003... / ., " = 003 / 003... / .
NSUBST:  - = 2=4 / 2=34.. / .
COLOUR:  c = lightmagenta
COLOUR:  n@O012345. = magenta
FTILE:   nc+@OPQRS012345. = floor_rough_magenta
MAP
         "@"
cccccccccP.Sccccccccc
ccAAAAcccnnncccCCCCcc
cAAAAAAccnnnccCCCCCCc
cAAAAAAc.....cCCCCCCc
ccAAAAA+..Q..+CCCCCcc
cAAAAAAc.....cCCCCCCc
ccAAAAccccnccccCCCCCc
cccBccccc+O+cccccDccc
ccBBBcc--ccc--ccDDDcc
cBBBBBcc-----ccDDDDDc
cBBBBBcc-----ccDDDDDc
cBBBBBc-------cDDDDDc
cBBBBB+--c+c--+DDDDDc
ccBBBccc-cRc-cccDDDcc
ccccccccccccccccccccc
ENDMAP

NAME:   spicy_pingpong_abyss_rune
TAGS:   abyss_rune unrand
# four starflowers, 2 inside, 2 outside (1)
NSUBST: F = 2:1 / 3
MONS:   starflower
# four wretched stars, with a 1/3 chance of being something else (2)
SUBST:  2=223
MONS:   wretched star
# the "something else" squad contains the following:
# monsters similarish to starflowers (3)
SUBST:  3=3334
MONS:   tentacled starspawn / starcursed mass / demonic plant / oklob plant w:20
# generic abyss badthings who don't mind if their target is moved around (4)
MONS:   lich / wizard / thrashing horror
KITEM:  O = abyssal rune of Zot
COLOUR: cO = magenta
SUBST:  c = ccccb
COLOUR: n- = lightmagenta
FTILE:  AO = floor_crystal_squares
KFEAT:  - = runelight
KFEAT:  A = stone_arch
KFEAT:  n = iron_grate
KFEAT:  P = demonic_tree w:30 / petrified_tree / tree
KFEAT:  t : demonic_tree / altar_lugonu / granite_statue
MAP
3
 A F P PP    3
  @--.-..-....-
 F-++cccccccbb.3
  -+-n3nPn3ntb.
 P.cnA......nc.
  -c3.-.P.n.3c.
 P.cn..n2nP.nc-
 P.cP.12O21.Pc.P
  -cn.Pn2n..nc.P
  .c3.n.P.-.3c-
  .cn......Anc.P
  .btn3nPn3n-+-
 3.bbccccccc++-F
  -....-..-.--@
   3    PP P F A
                3
ENDMAP

###############################################################################
# Abyss Exit Vaults
# Note: Don't tag your abyss exit with allow_dup unless it's small and
# restrained in its gimmickry: there are more than enough abyss_exit vaults
# for the longest of given trips without having to repeat vault gimmicks
# and block seeing other vault gimmicks.
###############################################################################

NAME: abyss_exit_lava
TAGS: abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
l.l
.O.
l.l
ENDMAP

NAME:  evilmike_abyss_exit_plants
TAGS:  abyss_exit
SUBST: 1 = 112.
SUBST: . = .:100 1
MONS:  demonic plant
MONS:  bush
: init_abyss_exit(_G, "O")
MAP
 .......
.........
..11111..
..12221..
..12O21..
..12221..
..11111..
.........
 .......
ENDMAP

NAME:  evilmike_abyss_exit_1
TAGS:  abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
x+x
+O+
x+x
ENDMAP

NAME:  evilmike_abyss_exit_2
TAGS:  abyss_exit unrand allow_dup
SUBST: x = x:30 c:20 v:20 m:3 b:3
: init_abyss_exit(_G, "O")
MAP
  @ xxxx
 x.xxxxxxx
xx.x.....xx
xx.x.xxx.xx
xx.x.xOx.xx
xx.x.x.x.xx
xx.x...x.xx
xx.xxxxx.xx
xx.......xx
 xxxxxxxxx
  xxxxxxx
ENDMAP

NAME:  evilmike_abyss_exit_3
TAGS:  abyss_exit unrand allow_dup
SUBST: . = ..Wwl
: init_abyss_exit(_G, "O")
MAP
     .
    ...
   .....
  .......
 .........@
.....O.....
 .........
  .......
   .....
    ...
     .
ENDMAP

NAME:   evilmike_abyss_exit_5
TAGS:   abyss_exit unrand allow_dup
ITEM:   stone q:1 no_pickup
NSUBST: d = 1:O / *:d
: init_abyss_exit(_G, "O")
MAP
    x   x
  x x x x x
 xxxxxxxxxxx
  xdxdxdxdx
xxx+x+x+x+xxx
  x.........@
xxx+x+x+x+xxx
  xdxdxdxdx
 xxxxxxxxxxx
  x x x x x
    x   x
ENDMAP

NAME:  evilmike_abyss_exit_6
TAGS:  abyss_exit unrand allow_dup
SUBST: X: .x, x: xxxccvlw, .: ...W
: init_abyss_exit(_G, "O")
MAP
  x x x
 x x x x x
xxxxxxxxx x
xX.XxX.Xxx x
x.x.x.x.x x
@XxX.XxOxx x
xxxxxxxxx x
 x x x x x
  x x x
ENDMAP

NAME:  evilmike_abyss_exit_7
TAGS:  abyss_exit unrand allow_dup
SUBST: x:xxcv
: init_abyss_exit(_G, "O")
MAP
xx.xx
x.x.x
.xOx.
x.x.x
xx.xx
ENDMAP

NAME:  evilmike_abyss_exit_8
TAGS:  abyss_exit unrand allow_dup
SUBST: G : GGT, T : TV
: init_abyss_exit(_G, "O")
MAP
...G...
.G...G.
.......
G..O..G
.......
.G...G.
...G...
ENDMAP

NAME:  evilmike_abyss_exit_11
TAGS:  abyss_exit unrand allow_dup
SUBST: b = bbx
: init_abyss_exit(_G, "O")
MAP
   b.b
  bb.bb
 bb...bb
bb.....bb
b.......b
....O....
b.......b
bb.....bb
 bb...bb
  bb.bb
   b.b
ENDMAP

NAME:  evilmike_abyss_exit_15
TAGS:  abyss_exit
SUBST: X = x., x=xxc
: init_abyss_exit(_G, "O")
MAP
 X X X
X XXX X
 XXXXX X
XXXXXXX X
xxxxxxxX X
+.+.+OxXX X
xxxxxxxX X
XXXXXXX X
 XXXXX X
X XXX X
 X X X
ENDMAP

NAME:   evilmike_abyss_exit_16
TAGS:   abyss_exit
NSUBST: . = 1:O / *:.
SUBST:  c = cbx
: init_abyss_exit(_G, "O")
MAP
c+c+c+c+c+c
+.+.+.+.+.+
c+c+c+c+c+c
+.+.+.+.+.+
c+c+c+c+c+c
+.+.+.+.+.+
c+c+c+c+c+c
+.+.+.+.+.+
c+c+c+c+c+c
+.+.+.+.+.+
c+c+c+c+c+c
ENDMAP

NAME:  evilmike_abyss_exit_17
TAGS:  abyss_exit unrand allow_dup
SUBST: x = xxc, . = ...W, 0 = 0.
: init_abyss_exit(_G, "O")
MAP
..xx0xx..
...xxx...
x...x...x
xx.V.V.xx
0xx.O.xx0
xx.V.V.xx
x...x...x
...xxx...
..xx0xx..
ENDMAP

NAME:  guppyfry_abyss_exit_spiral_guarded
TAGS:  abyss_exit unrand allow_dup
SUBST: - = llx
: init_abyss_exit(_G, "O")
MAP
.0---------0
.-........--
..--------.-
.--.....--.-
.-.-----.-.-
.-.--O--.-.-
.-.-.---.-.-
.-.--...--.-
.-.-------.-
.--.......--
.0---------0
ENDMAP

NAME:  bh_abyss_exit_spiral
TAGS:  abyss_exit unrand allow_dup
: init_abyss_exit(_G, "O")
MAP
 .xxxx.
  .xxxx.
    .xxx.
    .xx.
   ..x..
  ...O...
   ..x..
   .xx.
  .xxx.
   .xxxx.
    .xxxx.
ENDMAP

NAME:  bh_abyss_exit_grid
TAGS:  abyss_exit unrand allow_dup
SUBST: a = x.
SUBST: b = x..
SUBST: c = x...
: init_abyss_exit(_G, "O")
MAP
   b b b b b
  a.a.a.a.a.a
 a.x.x.x.x.x.a
b.x.x.x.x.x.x.b
 a.x.x.x.x.x.a
b.x.x.c.c.x.x.b
 a.x.c.0.c.x.a
b.x.x.c.c.x.x.b
 a.x.x.x.x.x.a
b.x.x.x.x.x.x.b
 a.x.x.x.x.x.a
  a.a.a.a.a.a
   b b b b b
ENDMAP
