###
## Maps from named Wizards, unrand and fixedarts
#
#Wizard    |Threat                  |Loot                    |XP
#--------------------------------------------------------------------
#Doroklohe |constructs or demons    |scrolls or armour       |12000
#          |or top-tier undead      |or random               |
#--------------------------------------------------------------------
#Wucad Mu  |hell effect "monks",    |potions of experience,  |9000
#          |summoning OCS           |crystal ball of Wucad Mu|
#--------------------------------------------------------------------
#Cigotuvi  |uglies, abominations,   |tmut potions / books,   |16000
#          |lump shapeshifters      |scrolls of poison       |
#--------------------------------------------------------------------
#Iskenderun|DE mages, iood statues, |books, books, books,    |22000
#          |purple draconians       |robe of the archmagi    |
#--------------------------------------------------------------------
#Zonguldrok|skeletal warriors,      |consumables, gold,      |20000+
#          |zombies, ancient lich   |Zonguldrok's sword      |
#--------------------------------------------------------------------
#Golubria  |tloc-themed monsters,   |tloc items, cloaks,     |20000
#          |Abyss monsters          |abyss-escape aides      |
#--------------------------------------------------------------------
#Cloud Mage|air elementals,         |potions, robe of clouds,|24000
#          |wind drakes, Cloud Mage |speed/air-related misc  |
#--------------------------------------------------------------------
#Hellbinder|demons, summoners,      |fire/summoning/         |17000
#          |Hellbinder              |demonic items           |
#--------------------------------------------------------------------
#Lehudib   |earth-themed monsters,  |Moon Troll Leather Armour
#          |"space" themed abyss    |random loot and         |20000+
#          |monsters                |randbook of             |
#          |                        |earth/transmutations,   |
#          |                        |earth/translocations, or|
#          |                        |earth/conjurations
#--------------------------------------------------------------------
#Eringya   |plant monsters, archers |books, staves, potions  |
#          |and fenstrider witches  |spectral ego weapons    |
#--------------------------------------------------------------------
#Maxwell   |constructs and meaty    |gear with dangerous ego,|
#          |mace wielders           |weapon/armour artifacts |
#--------------------------------------------------------------------
#Yara      |Warrior-mages with      |antimagic weapons, books|
#          |antimagic weapons       |                        |
#--------------------------------------------------------------------
#Borgnjnor |Corporeal and ghostly   |necromancy loot, gold   |
#          |undead, warlocks        |                        |
#--------------------------------------------------------------------
#Tukima    |Dancing weapons,walking |aux armour, books,      |
#          |tomes, rakshashas       |phantom mirror          |
#--------------------------------------------------------------------
#Alistair  |Lots of wizards, invited|consumables, books,     |
#          |guests, ds corrupters   |condenser vane          |
##


#---------------------------------------------------------------------
#Full Name                |Layout               |Colours
#---------------------------------------------------------------
#Doroklohe's Tomb         |densely packed       |yellow walls,
#                         |collapsing tombs     |dark floor
#---------------------------------------------------------------
#Wucad Mu's Monastery     |empty temple         |dark walls,
#                         |                     |autumn trees
#---------------------------------------------------------------
#Cigotuvi's Fleshworks    |organic, irregular,  |magenta/red/yellow
#                         |twisted innards      |flesh/blood tiles
#---------------------------------------------------------------
#Iskenderun's Mystic Tower|fortress tower with  |tons of magenta
#                         |statues, cave corners|
#---------------------------------------------------------------
#Zonguldrok's Mausoleum   |tower, graveyard     |piles of darkgray
#---------------------------------------------------------------
#Roulette of Golubria     |old-abyss mess,      |mostly green,
#                         |teleport chambers maw|rare white or cyan
#---------------------------------------------------------------
#Cloud Mage's Chambers    |"cloud-esque"        |lightgray, white,
#                         |                     |lightblue
#---------------------------------------------------------------
#Hellbinder's Lair        |triangles and circles|red, darkgray,
#                         |sigils               |yellow sigils
#---------------------------------------------------------------
#Lehudib's Moon Base      |Circular and alien   |blue/lightblue/magenta
#                         |base-like structure  |colour-shifting crystal
#---------------------------------------------------------------
#Eringya's Formal Garden  |Gently curving open  |green with a chance for
#                         |paths hedged by trees|red/yellow autumn variant
#---------------------------------------------------------------
#Maxwell's Workshop       |big rooms with forge |metal
#---------------------------------------------------------------
#Yara's Duelist Academy   |campus               |stone and trees
#---------------------------------------------------------------
#Borgnjor's Mausoleum     |split path           |tarlike
#---------------------------------------------------------------
#Tukima's Studio          |mirrored hall        |lightgray/white
#---------------------------------------------------------------
#Alistair's Party Mansion |rooms                |gray/green/white
##

# TO-DO:
#
# Actual portals need quite a bit of editing, and some unique tiles.
# Tiles to fix: Doroklohe's plain floor, Cigotuvi's doorways, less generic
# Iskenderun tiles, Cloud Mage's "white fluffiness" and "sea of clouds".
#
##

{{
crawl_require("dlua/dungeon.lua")


function wizlab_portal (e)
    local timeout_turns = crawl.random_range(600, 800)

    local messager =
      timed_msg {
           initmsg = { "You hear the crackle of arcane power.",
                       "There is an entrance to a wizard's laboratory on "
                       .. "this level! Hurry and find it before the "
                       .. "portal closes forever!" },
        finalmsg = "The crackle of the magical portal is almost imperceptible now.",

        verb = 'crackle',
        noisemaker = 'magical portal'
    }

    e.lua_marker('O',
      timed_marker {
        disappear = "The flow of magic halts.",
        entity = 'portal',
        turns = timeout_turns,
        single_timed = true,
        floor = "stone_arch",
        feat_tile = "dngn_portal_bazaar_gone",
        msg = messager })
    e.kfeat("O = enter_wizlab")

    e.tags("uniq_wizlab vaults_wizlab no_item_gen no_monster_gen chance_wizlab")

    -- Replace stone walls with whatever wall type the Vaults level is using.
    if you.in_branch("Vaults") then
        e.subst("c = x")
    end

    e.chance(0)
    -- Don't apply the chance in Vaults, since we use a Vaults room for that
    -- branch.
    e.depth_chance("Vaults", 0)
end

-- Destinations:
function wizlab_setup (e)
    e.orient("encompass")
    e.tags("no_item_gen no_monster_gen")
    e.kfeat("< = exit_wizlab")
end

function wizlab_milestone (e, wizlab_desc)
    crawl.mark_milestone("br.enter", "entered " .. wizlab_desc .. ".", "parent")
    crawl.take_note("Entered " .. wizlab_desc)
    crawl.mpr("Welcome to " .. wizlab_desc .. "!")
end

function wizlab_doroklohe_convert_boxes(data, triggerable, triggerer,
                                        marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if data.phase == 1 then
    data.phase = data.phase + 1
    if you.silenced() then
      crawl.mpr("The ground shakes.", "warning")
    else
      crawl.mpr("There is a faint hissing noise.", "warning")
    end
    return
  elseif data.phase == 2 then
    data.phase = data.phase + 1
    if you.silenced() then
      crawl.mpr("The ground shakes.", "warning")
    else
      crawl.mpr("There is a loud grinding noise.", "warning")
    end
    return
  elseif data.phase == 3 then
    data.phase = data.phase + 1
    crawl.mpr("The walls fall away. The entombed are set free!", "warning")
    for _, i in ipairs(dgn.find_marker_positions_by_prop("wall_drop", 1)) do
      dgn.terrain_changed(i.x, i.y, "floor", false)
      dgn.place_cloud(i.x, i.y, "black smoke", 2)
    end
    return
  else
    return
  end
end

local function spawn_zombie (x, y, spec)
    dgn.terrain_changed(x, y, "floor", false)
    local mons = dgn.create_monster(x, y, spec)
    mons.set_prop("zonguldrok", 1)
    return mons
end

function wizlab_zonguldrok_spawn_zombies(data, triggerable, triggerer,
                                         marker, ev)
    -- Save compat bit.
    if data.count == nil then
        data.count = 0; data.swcount = 0; data.vpcount = 0; data.account = 0
    end
    if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
        return
    end
    local graves = dgn.find_markers_by_prop("grave", 1)
    local x, y
    for _, gmarker in ipairs(graves) do
        x, y = gmarker:pos()
        if (you.see_cell(x, y) and crawl.one_chance_in(3)) or
            crawl.one_chance_in(8) then
            if data.count < 9 or data.count < 18 and crawl.one_chance_in(5) then
                if crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake ogre zombie")
                else
                    spawn_zombie(x, y, "generate_awake wight")
                end
            elseif data.count < 21 or data.count < 26 and crawl.one_chance_in(4) then
                if data.vpcount > 3 or crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake troll zombie")
                else
                    spawn_zombie(x, y, "generate_awake vampire")
                    data.vpcount = data.vpcount + 1
                end
            elseif data.count < 28 or data.account > 1 or crawl.x_chance_in_y(6, 7) then
                if data.swcount > 5 or crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake two-headed ogre zombie")
                else
                    spawn_zombie(x, y, "generate_awake skeletal warrior")
                data.swcount = data.swcount + 1
                end
            else
                spawn_zombie(x, y, "generate_awake ancient champion")
                data.account = data.account + 1
            end
            data.count = data.count + 1
            gmarker:remove()
        end
    end
end

function wizlab_zonguldrok_killed_zombie(data, triggerable, triggerer,
                                         marker, ev)
    if data.door_appeared then
        return
    end

    local mons = dgn.mons_from_mid(ev:arg1())
    if not mons.has_prop("zonguldrok") then
        return
    end

    data.number_killed = data.number_killed + 1
    if (#dgn.find_markers_by_prop("grave", 1)) * 2 < data.number_killed * 3
       and #dgn.find_markers_by_prop("grave", 1) < 10 then
        local x, y = marker:pos()
        dgn.tile_feat_changed(x, y, nil)
        dgn.terrain_changed(x, y, "closed_door", false)
        data.door_appeared = true
        if you.see_cell(x, y) then
            crawl.mpr("A door appears!")
        else
            crawl.mpr("The walls vibrate.")
        end
        local gxm, gym = dgn.builder_bounds()
        for p in iter.rect_iterator(dgn.point(1, 1), dgn.point(gxm-1, gym-1)) do
            if dgn.fprop_at(p.x, p.y, "no_tele_into") then
               dgn.fprop_changed(p.x, p.y, "no_tele_into")
            end
        end
    end
end


function wizlab_zonguldrok_awaken_wizard(data, triggerable,
                                         triggerer, marker, ev)
    if data.awoke == true then
        return
    end

    local pos = dgn.find_marker_positions_by_prop("wizard_grave", 1)[1]
    local lich = dgn.create_monster(pos.x, pos.y, "generate_awake ancient lich "
                 .."col:brown name:antique_lich name_replace name_descriptor "
                 .."tile:mons_zonguldrok_lich")
    if lich then
        data.awoke = true
    end
end

function wizlab_wucad_msgfn(data, triggerable, triggerer, marker, ev)
  if data.trig == true then
    return
  end

  if crawl.one_chance_in(3) then
    return
  end

  if dgn.persist.wucad_mu_died == true then
    return
  end

  if data.spot == 1 then
    crawl.mpr("Strange, shadowy figures dance through the air in front of you.", "talk_visual")
    data.trig = true
  elseif data.spot == 2 then
    crawl.mpr("This room is filled with shadowy figures, quietly meditating.", "talk_visual")
    data.trig = true
  elseif data.spot == 3 then
    crawl.mpr("Here, spectral monks perform complicated, martial routines; they fade quickly.", "talk_visual")
    data.trig = true
  elseif data.spot == 4 then
    if you.silenced() then
      return
    end
    crawl.mpr("Faint laughter comes from somewhere. Too faint to be real.", "talk_visual")
    data.trig = true
  elseif data.spot == 5 then
    if you.silenced() then
      return
    end
    crawl.mpr("There is a faint scream of pain from a crouched figure. This too fades quickly.", "talk_visual")
    data.trig = true
  elseif data.spot == 6 then
    crawl.mpr("Grey monks gather around the fountain. They do not speak, nor look at each other.", "talk_visual")
    data.trig = true
  elseif data.spot == 7 then
    crawl.mpr("A figure sits in silent meditation. It spots you, gestures wildly, and disappears.", "talk_visual")
    data.trig = true
  end
end

function wizlab_wucad_summon_monks(data, triggerable, triggerer, marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.wucad_mu_died == true then
    return
  end

  -- For now, no spawning during Step From Time; perhaps monks should
  -- continue to appear, just more slowly. If so, the circle_iterator below
  -- needs a different centre from (0,0).
  if you.pos() == 0 then
    return
  end

  local msp = "demonspawn seen sum:shadow_creatures dur:2 " ..
              "nas:old_memories generate_awake " ..
              "tile:mons_faint_demonspawn_monk / deep troll seen " ..
              "sum:shadow_creatures dur:2 nas:old_memories generate_awake " ..
              "tile:mons_faint_deep_troll_monk / grey draconian monk w:5" ..
              "seen sum:shadow_creatures dur:2 nas:old_memories " ..
              "generate_awake tile:mons_faint_grey_draconian_monk"

  local count = 0
  for point in iter.circle_iterator(3) do
    if crawl.one_chance_in(8) and count < 3 then
      if feat.is_solid(point.x, point.y) or not feat.has_solid_floor(point.x, point.y) then
      else
       local mon = dgn.create_monster(point.x, point.y, msp)
       count = count + 1
      end
    end
  end

  crawl.redraw_view()

  if count == 1 then
    crawl.mpr("One of the shadowy figures appears more solid!", "warning")
  elseif count > 1 then
    crawl.mpr("Shadows coalesce into solid form.", "warning")
  end
end

function callback.wizlab_wucad_wucad_died(data, triggerable,
                                           triggerer, marker, ev)
  dgn.persist.wucad_mu_died = true
  crawl.mpr("The shadows inhabiting this place fade forever.", "talk_visual")
end



function wizlab_borgnjor_call_souls(data, triggerable, triggerer, marker, ev)
  if triggerer.type ~= "monster_dies" then
    return
  end

  if you.pos() == 0 then
    return
  end

  local mons = dgn.mons_from_mid(ev:arg1())
  if mons.has_prop("borgnjor") then
      return
  end

  if not crawl.one_chance_in(5) then
    return
  end

  local msp = "lost soul seen sum:call_lost_soul dur:1 generate_awake"

  local count = 0
  for point in iter.circle_iterator(6) do
    if crawl.one_chance_in(8) and count < 1 then
      if feat.is_solid(point.x, point.y) or not feat.has_solid_floor(point.x, point.y) then
      else
       local mon = dgn.create_monster(point.x, point.y, msp)
       -- this can still fail if there's already another monster here
       if mon ~= nil then
        mon.set_prop("borgnjor", 1)
        count = count + 1
       end
      end
    end
  end

  crawl.redraw_view()

  if count == 1 then
    crawl.mpr("A lost soul coalesces out of thin air!", "warning")
  end
end
}}

default-depth: Depths, Elf, Crypt, Vaults, !Vaults:$

###############################################################################
# Portal entrances.
#
# Todo: more, and better.
NAME:   mu_enter_wizlab_1
TAGS:   vaults_orient_s
TILE:   m = dngn_transparent_wall_green
COLOUR: m = lightgreen
:       wizlab_portal(_G)
MAP
    wwwww
   wwwwwww
  wwbmbmbww
 wwbb...bbww
wwbm..O..mbww
 wwbb...bbww
  wwbb+bbww
   www.www
    w.@.w
ENDMAP

NAME:    mu_enter_wizlab_2
TAGS:    vaults_orient_s
SHUFFLE: tU
TILE:    m = dngn_transparent_wall_green
COLOUR:  m = lightgreen
TILE:    c = wall_stone_gray
:        wizlab_portal(_G)
MAP
.................
.bbbbbbbmbbbbbbb.
.bb...b...b...bb.
.m..U...O...U..m.
.bb...b...b...bb.
.bbbbbbb+bbbbbbb.
..bb...b.b...bb..
..m..t.....t..m..
..bb...b.b...bb..
..bbbbbb+bbbbbb..
.................
......c...c......
.....ccc.ccc.....
.................
ENDMAP

NAME:   mu_enter_wizlab_3
TAGS:   vaults_orient_s
MARKER: ! = lua:fog_machine { \
             pow_max = 10, delay_min = 10, delay_max = 40, \
             size = 2, size_buildup_amnt = 5, \
             size_buildup_time = 25, cloud_type = "flame" \
         }
MARKER: ? = lua:fog_machine { \
             pow_max = 10, delay_min = 10, delay_max = 40, \
             size = 2, size_buildup_amnt = 5, \
             size_buildup_time = 25, cloud_type = "freezing vapour" \
         }
COLOUR: .' = red / blue
KPROP:  '?! = no_tele_into
SUBST:  ' = .
TILE:   n = dngn_transparent_stone_magenta
COLOUR: n = lightmagenta
TILE:   c = wall_stone_gray
:       wizlab_portal(_G)
MAP
 ccccccccc
cc''!'?''cc
c?'''''''!c
c''nnnnn''c
c''n...n''c
c''n.O.n''c
c'?n...n!'c
c''nn.nn''c
c''nn.nn''c
cc!n.n.n?cc
 ccnn.nncc
  cc.n.cc
   cc.cc
    c@c
ENDMAP

NAME:   mu_enter_wizlab_4
TAGS:   vaults_orient_s
KFEAT:  ! = floor
COLOUR: ! = magenta
FTILE:  !O = floor_rough_magenta
:       wizlab_portal(_G, false)
MAP
    xxxxx
    w!!!x
   ww!O!x
  www!!!x
 www..www
www..www
ww..www
w..www
@.www
@www
ENDMAP

NAME:   mu_enter_wizlab_5
TAGS:   vaults_orient_s
COLOUR: U = random
COLOUR: W = mutagenic
KFEAT:  o = granite_statue
FTILE:  WU.Oo = floor_rough_magenta
TILE:   b = dngn_crystal_magenta
:       wizlab_portal(_G)
: set_feature_name("crystal_wall", "wall of crystal")
MAP
bbbbbbbbbbb
bbbb...bbbb
bWWU.O.UWWb
bWbb...bbWb
bWWWW.WWWWb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbo.obbbb
bbbb...bbbb
     @
ENDMAP

NAME:       mu_enter_wizlab_6
SUBST:      x = mc.
TILE:       c = wall_stone_white
TILE:       m = dngn_transparent_stone_magenta
FTILE:      mcx.O = floor_rough_magenta
:           wizlab_portal(_G)
MAP
c.c.ccccccc
x.x.x.x..Oc
.x.x.x.x..c
x.x.x.x.x.c
.x.x.x.x.xc
x.x.x.x.x.c
.x.x.x.x.xc
x.x.x.x.x..
.x.x.x.x.xc
x.x.x.x.x..
.x.x.x.x.xc
ENDMAP

NAME:   mu_enter_wizlab_7
# This one doesn't work as well in Vaults, since one entrance tends to become a
# dead end.
WEIGHT: 0 (Vaults)
KFEAT:  apqr = x
# Mimic the rock/floor colors of Zot:1-4
COLOUR: a = white
COLOUR: - = lightgray
COLOUR: p = blue
COLOUR: ' = white
COLOUR: q = lightblue
COLOUR: " = blue
COLOUR: r = magenta
COLOUR: ` = lightblue
TILE:   a = wall_zot_white
TILE:   p = wall_zot_blue
TILE:   q = wall_zot_lightblue
TILE:   r = wall_zot_magenta
FTILE:  - = floor_rough_lightgray
FTILE:  ' = floor_rough_white
FTILE:  " = floor_rough_blue
FTILE:  ` = floor_rough_lightblue
: wizlab_portal(_G)
MAP
xxxxxxxxxxxxx
x...........@
x.xxxxxxxxxxx
x-a''''''''-x
x-a"ppppppa-x
x-a"q````"a-x
x-a"q`rrq"a-x
x-a"q`O`q"a-x
x-a"qrr`q"a-x
x-a"````q"a-x
x-apppppp"a-x
x-''''''''a-x
xxxxxxxxxxx.x
@...........x
xxxxxxxxxxxxx
ENDMAP

NAME:     infiniplex_enter_wizlab_glasses
FTILE:    GO_ = floor_rough_magenta
TILE:     m = dngn_transparent_wall_green
COLOUR:   m = lightgreen
COLOUR:   _ = magenta
TILE:     G = dngn_statue_dragon
: wizlab_portal(_G)
MAP
.......
.bmmmb.
.m_O_m.
.mG_Gm.
.m___m.
.bb_bb.
.......
ENDMAP

NAME:     infiniplex_enter_wizlab_water
FTILE:    cnO_ = floor_rough_magenta
TILE:     n = dngn_transparent_stone_magenta
COLOUR:   n = lightmagenta
COLOUR:   _ = magenta
TILE:     c = wall_stone_white
: wizlab_portal(_G)
MAP
ww......ww
ww.wwww.ww
...wwww...
.wwcnncww.
.wwnO_nww.
.wwn__nww.
.wwcnn_ww.
...wwww...
ww.wwww.ww
ww......ww
ENDMAP

NAME:     infiniplex_enter_wizlab_spiral
SUBST:    G : xG.
SUBST:    x : xx.
MARKER:   ! = lua:fog_machine { \
               pow_max = 8, delay_min = 20, delay_max = 60, \
               walk_dist = 3, size = 1, start_clouds = 1, \
               start_clouds = 1, cloud_type = "freezing vapour" \
           }
MARKER:   ? = lua:fog_machine { \
               pow_max = 8, delay_min = 20, delay_max = 60, \
               walk_dist = 3, size = 1, start_clouds = 1, \
               start_clouds = 1, cloud_type = "mutagenic fog" \
           }
FTILE:    _! = floor_frozen
COLOUR:   _! = lightcyan
FTILE:    -? = floor_rough_magenta
COLOUR:   -? = magenta
: wizlab_portal(_G)
MAP
xx...........xx
xG.bbbbbbbbb.Gx
...bw..........
.b.bw.bbbbbbbb.
.b.bw.bllllllb.
.b.bw.bl.....b.
.b.bw..l.bbb.b.
.b.bwwwO--?b.b.
.b.bbb._..-b.b.
.b....._b.?b.b.
.b!__!_!b.-b.b.
.bbbbbbbb.-b.b.
..........?b...
xG.bbbbbbbbb.Gx
xx...........xx
ENDMAP

NAME:   lightli_enter_wizlab_magi_temple
TAGS:   vaults_orient_n
COLOUR: . = magenta
FTILE:  . = floor_rough_magenta
: wizlab_portal(_G)
MAP
bmm.@.mmb
m.......m
m.bmmmb.m
m.bGOGb.m
m.m...m.m
b.mb.bm.b
b.mb.bm.b
m.m...m.m
m.b...b.m
m.b...b.m
m.......m
bmmbbbmmb
ENDMAP

###############################################################################

default-depth: WizLab

###############################################################################
# Iskenderun's Mystic Tower
#
# TODO: Could use more unique tiles.
#       A previous commit labeled this one as boring, though acceptable;
#       hopefully emphasizing the orbs and terrain more than previously
#       should help, though more unique contents could certainly be tried.
#
NAME:       wizlab_iskenderun
TAGS:       no_rotate patrolling
MONS:       tengu conjurer
MONS:       statue hd:12 spells:orb_of_destruction.62.magical \
            tile:mons_statue_mage col:vehumet name:conjurer n_adj
KMONS:      3DEF = purple draconian
KITEM:      D = robe ego:archmagi ident:type, star_item / superb_item, star_item
KITEM:      E = any book, randbook disc:conjuration owner:Iskenderun \
                spells:iskenderun's_mystic_blast&iskenderun's_battlesphere, \
                randbook disc:conjuration owner:Iskenderun
KITEM:      F = any book good_item, any book good_item, any book
KMONS:      DEF = purple draconian
KMONS:      H = purple draconian scorcher / purple draconian annihilator /\
                purple draconian knight / purple draconian stormcaller
COLOUR:     v = magenta
TILE:       v = dngn_metal_wall_magenta
MARKER:     " = lua:fog_machine { \
                pow_max = 10, delay_min = 10, delay_max = 40, \
                size = 15, cloud_type = "purple smoke" }
NSUBST:     1 = 4 = 1:1 3:19 / 6 = 1:2 3:3 / * = 1:15 ., H = 1:H / 1:H. / *:.
SHUFFLE:    '=F- / '=F- / '=F- / F-'= / F-'=, DEF
SUBST:      - = v, ' = ., = = +
LROCKTILE:  wall_zot_magenta
LROCKCOL:   lightmagenta
LFLOORTILE: floor_rough_magenta
LFLOORCOL:  magenta
:           set_random_mon_list("purple draconian / tengu conjurer")
:           wizlab_setup(_G)
epilogue{{
            wizlab_milestone(_G, "Iskenderun's Mystic Tower")
}}
MAP
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
vxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxv
vxxx..x.x.x.x.x.x.xx"xx.x.x.x.x.x.xx.xxxv
vxx<xxAx.x.x.x.x.x.x.x.x.x.x.x.x.x.xx.xxv
vx.x"xxx.x..........x.............xx"x.xv
vx.xx...............................xxxxv
vxxAx...............2...............x.xxv
vx.xx................................x.xv
vxx.......2.......v...v.......2.......xxv
vx.xx...........v.vv.vv.v............x.xv
vxx............vvv11.11vvv............xxv
vx.x..........v.v1vvvvv1v.v..........x.xv
vxx..........v.v1vvvEvvv1v.v..........xxv
vx.x........vvv1vvvv+vvvv1vvv........x.xv
vxx..........v1vvvH...Hvvv1v..........xxv
vx.x.......vv1vvvH......vvv1vv.......x.xv
vxxx........v1vvv.......vvv1v........xxxv
vx".x...2.....vD+.H.2...+'=.....2...x."xv
vxxx........v1vvv.......vvv1v........xxxv
vx.x.......vv1vvvH......vvv1vv.......x.xv
vxx..........v1vvvH...Hvvv1v..........xxv
vx.x........vvv1vvvv+vvvv1vvv........x.xv
vxx..........v.v1vvvFvvv1v.v..........xxv
vx.x..........v.v1vv-vv1v.v..........x.xv
vxx............vvv11.11vvv............xxv
vx.x............v.vv.vv.v............x.xv
vxx.......2.......v...v.......2.......xxv
vx.x.................................x.xv
vxx.x...............2...............x.xxv
vxxxx...............................xxxxv
vx.x"xx.............x.............xx"x.xv
vxx.xx.x.x.x.x.x.x.x.x.x.x.x.x.x.x.xx.xxv
vxxx.xx.x.x.x.x.x.xx"xx.x.x.x.x.x.xx.xxxv
vxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxv
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
ENDMAP

###############################################################################
# Lehudib's Moon Base by gammafunk

# Lehudib, who penned many writings on earth magic, eventually tired of
# studying this world and sought to uncover the secrets of our moon. After
# arriving there through unknown means, the wizard carved out a fortress on the
# moon's surface, filling it with bizarre monstrosities. Who can say what
# mysteries the self-described Lunar Mage uncovered in such isolation?
# Adventurers who manage to reach the remote Moon Base of Lehudib may indeed
# find powers beyond their comprehension!

NAME:       wizlab_lehudib
KPROP:      ` = no_tele_into
: item(dgn.loot_scrolls .. " / " .. dgn.loot_potions)
ITEM:       potion of mutation
# Equall chance between randart jewellery and good aux armour.
: item("any randart jewellery w:60" .. " / " .. dgn.good_aux_armour)
ITEM:       randbook owner:Lehudib disc:earth disc2:transmutation \
                     spells:lehudib's_crystal_spear \
            / randbook owner:Lehudib disc:earth disc2:translocation \
                     spells:lehudib's_crystal_spear \
            / randbook owner:Lehudib disc:earth disc2:conjuration \
                     spells:lehudib's_crystal_spear

KMONS:      LM = demonic plant
MONS:       w:15 tentacled starspawn / stone giant / eye of devastation
MONS:       w:20 glowing orange brain / w:12 great orb of eyes / w:5 neqoxec \
            / w:3 golden eye band
MONS:       starcursed mass / brown very ugly thing band
MONS:       cacodemon
MONS:       quicksilver dragon / war gargoyle / crystal guardian \
            / wretched star
MONS:       orange crystal statue name:lunar_statue n_rpl n_des \
                spells:brain_feed.24.magical;draining_gaze.24.magical;\
                       lehudib's_crystal_spear.24.magical;\
                       shadow_creatures.48.magical \
                col:lightmagenta tile:mons_zot_statue
MONS:       moon troll

## The substitutions/shuffles below give 1/3 chance each of both paths
## open, D-path open, or E-path open, and gives 1/4 chance for the
## portal being in any of the 4 locations.
SHUFFLE:    DENOPQK / FERSOO? / EFOOZ!?
## For both paths open, 50% each of South or East portals. For D-path,
## 1/4 chance of East, 3/4 chance of North, For E-path, 1/4 chance of
## South, 3/4 chance of West.
SHUFFLE:    NQ / QN, RS / SR / SR / SR, !Z / Z! / Z! / Z!
SUBST:      DE = ., F = c, K = n, OPQS! = G, RZ = N, ? = .
## Remaining level randomization
SHUFFLE:    Hyp / Mgo
SUBST:      o = 1234, ' = llc, ; = .JJJJJ, yp = .
NSUBST:     h = 2:1 / ., i = 2:1 / ., j = 2:1 / ., k = 2:1 / ., q = 2:1 / .
NSUBST:     r = 3:1 / ., s = 3:1 / ., u = 1:1 / ., z = 1 / 1234, " = 3:J / .
NSUBST:     * = 2:d / *, ` = 3:M / 3=M. / 2:e / 3=..e / 4 / 233 / .

{{
set_random_mon_list("eye of devastation / stone giant " ..
                    "/ tentacled starspawn / glowing orange brain " ..
                    "/ great orb of eyes / neqoxec w:5 / golden eye w:5 " ..
                    "/ very ugly thing w:5 / starcursed mass w:5 " ..
                    "/ cacodemon w:1 / quicksilver dragon w:1 " ..
                    "/ war gargoyle w:1 / crystal guardian w:1 " ..
                    "/ wretched star w:1")
}}
MARKER:     N = lua:transp_loc("moon_troll_entry")
MARKER:     H = lua:transp_dest_loc("moon_troll_entry")
MARKER:     _ = lua:transp_loc("moon_troll_exit")
MARKER:     & = lua:transp_dest_loc("moon_troll_exit")
KFEAT:      J = crystal_wall
TILE:       c = wall_moon
LFLOORTILE: floor_pebble_lightblue
LFLOORCOL:  lightblue
LROCKTILE:  wall_moon
COLOUR:     b = silver
COLOUR:     J = disjunction
COLOUR:     c = blue
:           wizlab_setup(_G)
epilogue {{
            wizlab_milestone(_G, "Lehudib's Moon Base")
}}
MAP
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccbbbccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccc*bPb*cccccccccccccccccccccccccccc
cccccccccccccccccccccccccc.......ccccccccccccccccccccccccccc
cccccccccccccccccccccccccc...5...ccccccccccccccccccccccccccc
cccccccccccccccccccccccccccc...ccccccccccc..cccccccccccccccc
cccccccc.A.ccccccccccccj............ccccc.....cccccccccccccc
ccccccc.....ccccccccj....v...v..jv.....cc......ccccccccccccc
cccccc.......ccccccc.....v.......v........rJJ...cccccccccccc
cccccc...&...cccccccc.....jccccc......cc..JJJ....ccccccccccc
cccccc.......cccccccc.jccccccccccccc......JJJ.....cccccccccc
ccccccc......cccccccccccccccccccccccccc...JJ..JJ...ccccccccc
cccccccc.<....cccccccccccccccccccccccc......2JJJ....cccccccc
cccccccccccc...ccccccccccccc...ccccccc..JJ..JJJ......ccccccc
ccccccccccccc...ccccccE................JJJ..JJ3.JJJ..ccccccc
cccccccccccccc...ccc.qE......J.........JJJ.r...JJJJ...cccccc
ccccccccccccccc.......Ec..J..2..J..c...JJ......JJJr...cccccc
cccccccccccccccc.......cc....v....cc.......JJJ.......ccccccc
cccvvbbbvvcccccc.......qc..vvvvv..c.......JJJJ.....ccccccccc
ccvv*bOb*vvccccc...JJ...cc..vvv2.cc...JJ..JJJr...ccccccccccc
ccv.......vcccc....JJJ...c....2..c...JJJ.......ccccccccccccc
ccv...5...vccccq....JJJ..cc.....cc..JJJr.....ccccccccccccccc
ccv.......vcccDDD....JJ..qccnnnccr..JJ.......ccccccccccccccc
ccv.v...v.vccc..ccq......ccc|_|ccc.......cc..ccccccccc.kcccc
ccv..ivi..vcc....ccc....cc%d|f|d%cc....ccc....ccccccc...Lccc
ccv..vvv..vccc.....cccqcc.%bbbbb%.ccrccc.....cc.kc......cccc
ccvi..v..ivccc.v...cHccc..bb...bb..cccMc...v.cL..ck.vv..cccc
ccvv.....vvccc....ccu.bb...........bb.gcc....cc..cc.v*.ccccc
cccv.....vccc..v..n...b.............b...n..v.2+.........bbcc
cccv.viv.vccc..v..n...b......7......b...n..v..+.......5.Qbcc
cccv.....vccc2.v..np..b....z...z....b..on..v..+.........bbcc
ccvv.....vvccc....cc..bb...........bb..cc....cc..cc.v*.ccccc
ccv..ivi..vccc.v..2c...b...........b...c2..v.cL..ck.vv..cccc
ccv..vvv..vccc.....c...bb.........bb...c.....cc.kc......cccc
ccv...v...vcc2...cccc...bb.......bb...cccc...2ccccccc...Lccc
ccv.v...v.vccc..cc..c....bbb...bbb....c.3cc..cc`````cc.kcccc
ccv.......vccc......cc...............cc...c++c```````c++cccc
ccvv.....vvcccc......cc.............cc2...c..m```````m..cccc
ccccc....cccccc.......ccc.........ccc.....c..m```````m..cccc
cccccc...ccccccc..v.....cccc...cccc....u..c..cc`````cc..cccc
ccccccc...ccccccc..........cnnnc......JJ..c...cmmmmmc...cccc
cccccccc...cccccc..vv.v...................cc...........ccccc
ccccccccc...ccccc..vvs.................J...ccL.......Lcccccc
cccccccccc...cccs......cccc.....cccc.....Ju.ccc.....ccc'cccc
cccc.cccccc........v..cccccc.h.ccccccu..JJ....cnKnKnc..''ccc
ccc...cccccc....vv...ccccccc+++ccccccc..................''cc
cc.....ccccc..v.vv..sccccccc...ccccccc...................'cc
ccc..v..cccc........ccccch.G...G.hccccc....u;.."".""..;..''c
cccc..2.......sv....cccc...........ccccu...;;.".....".;;..'c
ccccc..vv.v.vv.....ccccc...........ccccc...;.."....."..;..'c
cccccc.vv...vv.vv.scccch...cc.cc...hcccc...;JJJJJ6JJJJJ;..'c
cccccc..s......vv.ccccc...cc...cc...ccccc..;JJJJJ+JJJJJ;..'c
ccccccc..v.3......cccc....c.....c....cccc..;JJJJJfJJJJJ;..'c
cccccccc...v.vv..ccccc...............ccccc..;JJJJJJJJJ;..''c
ccccccccc....vv..ccccL.h.....5.....h.Lccc''.....JJJ.....''cc
ccccccccccc.....cccccc....c*...*c....ccccc''...........''ccc
ccccccccccccc.scccccccccccccbNbcccccccccccc'''''''''''''cccc
ccccccccccccccccccccccccccccbbbccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Eringya's Formal Garden
# Redesigned by Hellmonk, loosely based on the old layout but reshaped to work
# better with the monster set. No lua gimmick, just a set of plant and archery
# themed monsters, plus some fenstrider witches.
# Loot: staves, books, spectral branded weapons
# Could use a slightly different grass tile for better color contrast
NAME:       wizlab_eringya
TAGS:       no_rotate
ITEM:       any book, any magical staff
:item(dgn.loot_potions)
ITEM:       any weapon good_item ego:spectral no_pickup / \
            lajatang ego:spectral no_pickup w:4 / \
            quarterstaff randart plus:12 ego:spectral no_pickup w:1
MONS:       deep elf archer w:5 / faun / centaur warrior
MONS:       yaktaur / satyr / naga sharpshooter
MONS:       shambling mangrove, thorn hunter / eleionoma, deep elf master archer
MONS:       fenstrider witch, bush
KMONS:      P = oklob plant
KFEAT:      - = stone_arch
KFEAT:      _ = altar_fedhas
SHUFFLE:    pq/rs
SUBST:      q : y., r : y., p = ., s = .
NSUBST:     1 = 3:1 / *=1...., 2 = 2:2 / *=2..., 3 = 1:4 / 1:3 / *=34....
NSUBST:     5 = 2:5 / *=5., 7 = 1:P / 4:7 / *=P7777ttV........
NSUBST:     ; = 2:d / 2:e / 1:g / *:deff, A = 1:< /*:A
SUBST:      y = ct
MARKER:     A = feat:stone_arch
COLOUR:     G = lightgrey
TILE:       c = wall_brick_vines
: if crawl.one_chance_in(4) then
COLOUR:     t = lightred / red w:3 / green w:3 / lightgreen w:1
TILE:       t = dngn_tree_lightred / dngn_tree_red w:4 / dngn_tree_yellow w:4
: end
#should use statue_archer, but currently that doesn't work
TILE:       G = dngn_statue_centaur
LROCKTILE:  wall_brick_vines
LFLOORTILE: floor_grass
:           set_random_mon_list(
:               "deep elf archer / faun / centaur warrior / yaktaur / " ..
:               " satyr / naga sharpshooter / shambling mangrove / " ..
:               "thorn hunter w:5 / eleionoma w:5 / deep elf master archer w:2")
:           wizlab_setup(_G)
epilogue {{
            wizlab_milestone(_G, "Eringya's Formal Garden")
}}
MAP
ccccccccccccccccccccccccccccccccccccccccccccc
ctttttttttttttttttttttttttttttttttttttttttttc
cttttttttttt1....1....t....1....1tttttttttttc
cttttttt.............................tttttttc
ctttt1....tttttttttttt.tttttttttttt....1ttttc
cttt.....tttttttttt.......tttttttttt.....tttc
ctt...tt...ttt......G...G......ttt...tt...ttc
cty1.ttt2............A.A............2ttt.1ytc
ctt...tt......ttt...G...G...ttt......tt...ttc
cttt.....tttttttttt.......tttttttttt.....tttc
ctttt1....tttttttttttt.tttttttttttt....1ttttc
cttttttt.......1.............1.......tttttttc
cttttttttttt1.....1.......1.....1tttttttttttc
cttttttttttttttttttttT.Tttttttttttttttttttttc
cttttttttt.2.ttttttt.....ttttttt.2.tttttttttc
ctttttttt.....t...t...T...t...t.....ttttttttc
cttttttt...t....7.....7.....7....t...tttttttc
ctttttt....1......tc.....ct......1....ttttttc
cttttt..t......tttttcc-ccttttt......t..tttttc
ctttt...tt.7..tttttt.....tttttt..7.tt...ttttc
cttt...tttt..tttttt...3...tttttt..tttt...tttc
cttt.2.tttt...tttttt2.2.2tttttt...tttt.2.tttc
ctttt...tttt.2.tttttt;t;tttttt.2.tttt...ttttc
ctttttp.pttttq.qtttttttttttttq.qttttp.ptttttc
cttttttpppttttqqqttttyyyttttqqqttttpppttttttc
cttttp..-..pttq...tt..2..tt...qttp..-..pttttc
ctty.........ytt....1...1....tty.........yttc
ctt;1..tTt..1;ytt.3...T...3.tty;1..tTt..1;ttc
ctty....3...2ytt....1...1....tty2...3....yttc
ctttt2..-...tt....tt;.3.;tt....tt...-..2ttttc
ctttttt...tttt...ttttytytttt...tttt...ttttttc
cttttt...tttt2..ttttttgtttttt..2tttt...tttttc
ctttt11.tttt...tttt5G;_;G5tttt...tttt.11ttttc
cttt..2tttt1.2tttt....3....tttt2.1tttt2..tttc
cttt7..ttt...tttt2....6....2tttt...ttt..7tttc
ctttt...t.7..tttG;.........;Gttt..7.t...ttttc
cttttt........tttttcc5.5ccttttt........tttttc
ctttttt.-.6.-..tttcc..7..ccttt..-.6.-.ttttttc
cttttttt........t.7-..T..-7.t........tttttttc
cttttttttt3...11.............11...3tttttttttc
cttttttttttt..12...7..4..7...21..tttttttttttc
cttttttttttttttt.............tttttttttttttttc
cttttttttttttttttttt2...2tttttttttttttttttttc
ctttttttttttttttttttttttttttttttttttttttttttc
ccccccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Borgnjor's Mausoleum
# Designed by Hellmonk. Split map layout with corporeal undead on one side and
# incorporeal undead on the other. Lost souls spawn continuously, and the ending
# includes some halazid warlocks and their servants. Loot is necromancy
# themed, as you'd expect.
NAME:   wizlab_borgnjor
TAGS:   no_rotate
ITEM:   randbook disc:necromancy numspells:6 owner:Borgnjor w:5 / any book /\
        necronomicon / randbook disc:necromancy / staff of death /\
        macabre finger necklace w:1 / sceptre of torment w:1
ITEM:   any book / scroll of torment ident:all q:3 /\
        any weapon good_item ego:pain / any weapon good_item ego:vampirism
ITEM:   any ring / any amulet w:5
MONS:   spectral spriggan berserker / spectral titan / spectral spark wasp /\
        spectral harpy / spectral quicksilver dragon / spectral wolf spider /\
        spectral caustic shrike / phantasmal warrior w:60
MONS:   flayed ghost / shadow wraith / eidolon
MONS:   spriggan berserker zombie / titan zombie / spark wasp zombie /\
        harpy zombie / quicksilver dragon zombie / wolf spider zombie /\
        caustic shrike zombie / skeletal warrior w:30 / jiangshi w:30
MONS:   ancient champion / revenant, flying skull
MONS:   deep elf death mage / vampire mage / necromancer, halazid warlock
:if crawl.one_chance_in(4) then
SUBST:   F = c..., E = cccc., D = c
:else
SUBST:   D = c., E = c.., F = c
:end
SHUFFLE: 12/34
NSUBST:  7 = 3:7 / *=775., 6 = 2:6 / *=6., 2 = 2:2 / *=2.., 4 = 2:4 / *=4..
NSUBST:  A = 1:< / *:A
SUBST:   1 = 1.., 3 = 3.., 5 = 5.., V = VVVY
TILE:    c = wall_borg_stone
LFLOORTILE: floor_borg
{{
local summon_marker = TriggerableFunction:new ({
    func="wizlab_borgnjor_call_souls",
    repeated=true })

summon_marker:add_triggerer(DgnTriggerer:new {type="monster_dies",
    target = "any"})

lua_marker('A', summon_marker)
}}
:           set_random_mon_list(
:               "skeletal warrior / flayed ghost / phantasmal warrior / " ..
:               "necromancer / vampire mage / shadow wraith / " ..
:               "revenant w:2 / ancient champion w:2")
:           wizlab_setup(_G)
epilogue {{
            wizlab_milestone(_G, "Borgnjor's Mausoleum")
}}
MAP
             ccccc
           ccc565ccc
          cc55.5.55cc
         cc..55755..cc
        cc5.5c+++c5.5cc
        c6.5cc.5.cc5.6c
       cc5.cc5.7.5cc.5cc
       c...c5.555.5c...c
       c2.2cY57575Yc4.4c
       c.5.c.76.67.c.5.c
      ccc..cc.$$$.cc..ccc
     cc1c...ccfffcc...c3cc
    cc11FF...cc+cc...FF33cc
   cc2111FF.11cec33.FF3334cc
  cc......FF..cec..FF......cc
 cc...EE...cc2cec4cc...EE...cc
 c1..EE...cc..cdc..cc...EE..3c
 c..EE..2cc..1cdc3..cc4..EE..c
 c..EE11cc12.2ccc4.43cc33EE..c
 c..E..1c11EE..D..EE33c3..E..c
 c..D..cc2.EE.264.EE.4cc..D..c
 c..D..c..EEEE1D3EEEE..c..D..c
cc.2D2.c.EEcE.1D3.EcEE.c.4D4.cc
c1..D..c..EcEE1D3EEcE..c..D..3c
c1..D..cc.EEE..c..EEE.cc..D..3c
c1..D..2c..E..ccc..E..c4..D..3c
c1..D...c...11cVc33...c...D..3c
c...c..1...1.cc.cc.3...3..c...c
cc..FF..1..ccc...ccc..3..FF..cc
 c...FF....cV.....Vc....FF...c
 c....FF..2c...A...c4..FF....c
 c.....ccccc.......ccccc.....c
 c..c1.......cc.cc.......3c..c
 c1.EE.......cc.cc.......EE.3c
 cc1...ccccc.......ccccc...3cc
  cc1.cc   c...A...c   cc.3cc
   cccc    cV.....Vc    cccc
           ccc...ccc
             cc.cc
              cVc
              ccc
ENDMAP

###############################################################################
# Tukima's Studio
# Reimplemented by Hellmonk. Features dancing weapons and walking tomes, plus
# some strange machines that mirror the player. Loot always contains a phantom
# mirror in addition to some book and aux armour items (plus the weapons).
NAME:   wizlab_tukima
TAGS:   no_rotate
ITEM:   hat good_item / pair of boots good_item / scarf good_item /\
        cloak good_item / pair of gloves good_item / randbook disc:hexes /\
        any book w:35 / any armour good_item w:5
ITEM:   phantom mirror
MONS:   rakshasa, dancing weapon
MONS:   rakshasa
MONS:   walking frostbound tome / walking earthen tome / walking crystal tome /\
        walking divine tome
MONS:   strange machine
KFEAT:   ~ = closed_clear_door
SUBST:      ':cc., ":cc., -:mV, 1 = 11..., 2 = 2...
NSUBST:     d = 1:e / *:d, 3 = 2:3 / * = 3..., 4 = 1:4 / *= 42.., A = 1:< / *:A
NSUBST:     5 = 1:5 / *:5.
TILE:       c = wall_marble_tukima
TILE:       V = dngn_dry_fountain_white
LFLOORTILE: floor_w_marble
:           set_random_mon_list("rakshasa")
:           wizlab_setup(_G)
epilogue{{
            wizlab_milestone(_G, "Tukima's Studio")
}}
MAP
            ccccccc
            ccmmmcc
        ccccccA.Acccccc
       ccm...c...c...mcc
       cc.............cc
      cc..ccm.....mcc..cc
      c~~ccccm...mcccc~~c
      c2.."""cm~mc"""..2c
     ccc.1c"""..."""c1.ccc
     cmm..mcm.....mcm..mmc
     cm...mcm.....mcm...mc
     cm...mcm..2..mcm...mc
     cm...mcm..V..mcm...mc
     cm2..mcm1...1mcm..2mc
     cm...mcm..1..mcm...mc
     cm1.2mcm2.2.2mcm2.1mc
     cc1..c'''...'''c..1cc
     ccc..'''cm2mc'''..ccc
      cc~~cccm...mccc~~cc
     ccm1.mcm1...1mcm.1mcc
     cm.3.mcm3.V.3mcm.3.mc
    ccm..mccm2...2mccm..mcc
  cccm...mcccm.5.mcccm...mcc
  ccm2.-.1mcccm.mcccm1.-.2mcc
 ccm2....mcccm121mcccm....2mcc
ccm..mm...mmm.....mmm...mm..mcc
cm4..cm......2.5.2......mc..4mc
ccm.....mm.3...4...3.mm.....mcc
 ccmd4.mccmmm.....mmmccm.4dmcc
  ccmmmccccccdddddccccccmmmcc
   ccccc    ccmmmcc    ccccc
             ccccc
ENDMAP
